<?php

    
  function kimberly_poll_block_info() {

    $blocks = array();

    $blocks['questions_form'] = array(
        'cache' => DRUPAL_CACHE_GLOBAL,
        'info'  => t('Encuesta kimberly')
    );

    return $blocks;

  }

  function kimberly_poll_block_view( $delta = '' ) {

    $blocks = array();

    if ( $delta == 'questions_form' ) {
      $blocks['subject'] = t('Encuesta kimberly');
      $blocks['content'] = theme( 'callback_questions', array(
              'questionsForm' => kimberly_poll_load_questions()
          )
      );
    }

    return $blocks;

  }


  function kimberly_poll_theme( $existing, $type, $theme, $path ) {
      return array( 'callback_questions' => array( 'vars' => array('questionsForm' => NULL) ) );
  }


  function theme_callback_questions( &$vars ) {

    global $user;

    $query = db_select('node', 'ua')
        ->fields('ua', array('nid'))
        ->condition('ua.uid', $user->uid, '=')
        ->condition('ua.type', 'user_answers', '=')
        ->execute()
        ->fetchAll();

    $output = drupal_render( drupal_get_form( 'kimberly_poll_quest_form', $vars['questionsForm'] ) );

    if ( count($query) > 0 ){

      $answer      = node_load( $query[ count($query) - 1 ]->nid );
      $dateCreated = explode('/',Date('m/d/y', $answer->created));
      $dateNow     = explode('/',Date('m/d/y'));
      
      if( $dateNow[0] >= $dateCreated[0] && $dateNow[1] > $dateCreated[1] ){
        
        $points  = (int) $answer->field_points['und'][0]['value'];
        $output  = NULL;
        
        $output .= '<div id="ContainerMessage" class="messages-poll">';
        $output .=  '<h2>' .t('Gracias por tus respuestas') . '</h2>';
        
        if( $points == 60 ){
          $output .=  '<h2>' .t('Has acertado en todas las preguntas') . '<br/>' . 
              t('Tendrás 50 estrellas adicionales por tu desempeño') . '</h2>';
        } else {
          $output .=  '<h2>' .t('Lo sentimos, no respondiste bien todas las preguntas') . '</h2>';
        }
        
        $output .=  '<h3>' .t('Pasadas 24 horas tu podrás realizar nuevamente la encuesta') . '</h3>';
        $output .= '</div>';
        
      }

    } 

    return $output;

  }


  function kimberly_poll_load_questions() {

    $questionsQuery  = new EntityFieldQuery();

    $questionsQuery->entityCondition('entity_type', 'node')->entityCondition('bundle', 'questions');

    $questionsResult = $questionsQuery->execute();
    $options         = array_keys( $questionsResult['node'] );

    return $options;

  }


  function kimberly_poll_quest_form( $form, &$form_states, $idQuestionsForm ) {

    for ( $i=0; $i<count($idQuestionsForm); $i++ ) {

      $questionForm = node_load( $idQuestionsForm[$i] );

      $form['question_' . ($i+1)] = array(
          '#options' => kimberly_poll_options_load( $questionForm->body['und'][0]['safe_value'] ),
          '#prefix'   => '<div class="question content-question-' . ($i + 1) . '">',
          '#required' => TRUE,
          '#suffix'   => '</div>',
          '#title'    => $questionForm->title,
          '#type'     => 'radios',
      );

      $form['nid_' . ($i + 1)] = array(
          '#type'  => 'hidden',
          '#value' => $questionForm->nid
      );

    }

    $form['send'] = array(
        '#prefix' => '<div class="content-submit" data-url="ajax-submit-poll">',
        '#suffix' => '</div>',
        '#type'   => 'submit',
        '#value'  => t('Responder Encuesta'),
    );

    return $form;

  }

  function kimberly_poll_quest_form_submit( $form, &$form_states ) {

    global $user;

    $points    = 0;
    $commands  = array();
    $values    = $form_states['values'];
    $questions = kimberly_poll_load_questions();
    $default   = array(
        'type'    => 'user_answers',
        'uid'     => $user->uid,
        'status'  => 1,
        'comment' => 0,
        'promote' => 0
    );

    for( $i=0; $i<count($questions); $i++ ){

      if ( isset($values['question_' . ($i + 1)]) ){

        $userAnswers['question' . ($i + 1)] = array(
            'selected_answer' => $values['question_' . ($i + 1)],
            'nid'             => $values['nid_' . ($i + 1)]
        );

      }

    }

    $userAnswer        = entity_create( 'node', $default );
    $userAnswerWrapper = entity_metadata_wrapper( 'node', $userAnswer );

    foreach ( $userAnswers as $answer ) {

      $questionWrapper = entity_metadata_wrapper( 'node', $answer['nid'] );

      if ( $answer['selected_answer'] == $questionWrapper->field_correct_answer->value() ) {
          $points += 10;
      }

    }

    $userAnswerWrapper->title        = sprintf( 'Respuesta del usuario: %s', $user->name );
    $userAnswerWrapper->field_points = $points;
    $userAnswerWrapper->field_goal   = ($points == 60) ? 'si' : 'no';
    $userAnswerWrapper->save();

  }
    

  function kimberly_poll_options_load( $options ) {

    $options = explode( ';', $options );
    $keys    = array( 'a', 'b', 'c', 'd' );

    for ( $i=0; $i<count($options)-1; $i++ ) {

        $option                    = explode( '|', $options[$i] );
        $optionsField[ $keys[$i] ] = $option[1];

    }

    return $optionsField;

  }
    
